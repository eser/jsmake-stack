class e{constructor(e){this.nextPointer=e}next(){const e=this.nextPointer();return null!==e?{done:!1,value:e}:{done:!0,value:null}}[Symbol.iterator](){return this}}function r(r,t){return new Promise((n,o)=>{r.on("readable",()=>{n(new e(()=>{const e=r.read(t);return null===e?null:{type:"chunk",data:e}}))})})}function t(e){return r=>new Promise((t,n)=>{const o=e=>n(e);e.on("error",o),e.write(r,()=>t(r)),e.removeListener("error",o)})}const n={fromNodeStream:r,CustomIterator:e,toNodeStream:t};export default n;export{e as CustomIterator,r as fromNodeStream,t as toNodeStream};
